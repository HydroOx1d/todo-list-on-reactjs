{"version":3,"file":"static/js/875.a147f131.chunk.js","mappings":"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","sources":["components/common/validate/validate.js","components/todo-add/TodoAdd.jsx","components/common/dateformat/dateFormat.js","components/todo-add/TodoAddContainer.jsx","components/todo-tasks/TodoTasks.jsx","components/todo-tasks/TodoTasksContainer.jsx","components/todo-header/TodoHeader.jsx","components/todo-header/TodoHeaderContainer.jsx","components/todo-main/TodoMain.jsx","components/todo-main/TodoMainContainer.jsx"],"sourcesContent":["export const emailValidation = () => {\n  let regex = new RegExp(\"[a-z0-9]+@[a-z]+.[a-z]{2,3}\");\n  return (value) => {\n    return regex.test(value) ? undefined : \"Invalid Email\";\n  };\n};\n\nexport const required = (value) => value ? undefined : \"Required Field\"\n\nexport const minValue = (min) => {\n  return (value) => {\n    if (value === undefined) {\n      return \"Min value \" + min;\n    }\n    if (value.length == 0) {\n      return `Min value ` + min;\n    } else if (value.length < min) {\n      return `Min value ` + min;\n    } else {\n      return undefined;\n    }\n  };\n};\n","import React, {useState} from 'react'\nimport './TodoAdd.css'\nimport { Form, Field } from 'react-final-form';\nimport Plus from '../../assets/plus.png'\nimport Close from '../../assets/closed.png'\nimport {required} from '../common/validate/validate'\n\nconst TodoAdd = (props) => {\n\n  const [adding, setAdding] = useState(false)\n\n\n  const onAddTask = (formObj) => {\n    setAdding(!adding);\n    props.onAddTask(formObj)\n  };\n\n  return (\n    <div className=\"todo-add main-padding\">\n      <div onClick={() => setAdding(!adding)} className=\"add-btn\">\n        <div className=\"add-btn__icon\">\n          <img src={Plus} alt=\"plus\" />\n        </div>\n        <div className=\"add-btn__text\">\n          <span>Add task</span>\n        </div>\n      </div>\n\n      {adding && (\n        <div>\n          <div className=\"dark-background\">\n            <div className=\"modal add-modal\">\n              <div className=\"add-modal__header\">\n                <h2>Add task</h2>\n                <div onClick={() => setAdding(false)} className=\"add-modal__close\">\n                  <img src={Close} alt=\"close\" />\n                </div>\n              </div>\n\n              <Form onSubmit={(formObj) => onAddTask(formObj)}>\n                {({ handleSubmit }) => (\n                  <form className=\"add-modal__form\" onSubmit={handleSubmit}>\n                    <div className=\"add-modal__input\">\n                      <Field name=\"title\" validate={required}>\n                        {({ input, meta }) => (\n                          <>\n                            <input\n                              type=\"text\"\n                              {...input}\n                              placeholder=\"Name of Task\"\n                            />\n                            {meta.error && meta.touched && (\n                              <span className=\"field-error\">{meta.error}</span>\n                            )}\n                          </>\n                        )}\n                      </Field>\n                    </div>\n                    <div className=\"add-modal__input add-modal__textarea\">\n                      <Field name=\"description\">\n                        {({ input }) => (\n                          <textarea\n                            type=\"text\"\n                            {...input}\n                            placeholder=\"Description\"\n                          />\n                        )}\n                      </Field>\n                    </div>\n                    <button className=\"button add-modal__button\">Add</button>\n                  </form>\n                )}\n              </Form>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TodoAdd;\n","\n\n\nexport const dateAndTime = (format) => {\n  let date = new Date();\n\n  switch (format) {\n    case \"time\": {\n      return date.toLocaleTimeString();\n    }\n    case \"date\": {\n      return date.toLocaleDateString();\n    }\n  }\n};","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport TodoAdd from \"./TodoAdd\";\nimport {addTask} from '../../redux/tasksReducer'\nimport {dateAndTime} from '../common/dateformat/dateFormat'\n\n\nconst TodoAddContainer = (props) => {\n\n  const onAddTask = (formObj) => {\n    let result = \"\";\n    let num = '0123456789'.split('');\n    let str = \"abcdefghijklmnopqrstuvwxyz\".split('');\n\n    for (let i = 0; i <= 10; i++) {\n      let idx = Math.floor(Math.random() * str.length);\n      let idx2 = Math.floor(Math.random() * num.length);\n      result += str[idx] + num[idx2];\n    }\n\n    props.addTask(props.uid,{\n      id: result,\n      date: dateAndTime(\"date\"),\n      time: dateAndTime(\"time\"),\n      status: \"In progress\",\n      ...formObj,\n    });\n  };\n\n  return <TodoAdd {...props} onAddTask={onAddTask}/>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    uid: state.auth.uid,\n  };\n};\n\nexport default connect(mapStateToProps, {addTask})(TodoAddContainer);\n","import \"./TodoTasks.css\";\nimport { NavLink } from \"react-router-dom\";\n\n// Function of delete task\n//import { database } from \"../../firebaseConfig\";\n//import {remove, ref} from 'firebase/database'\n//remove(ref(database, props.uid + \"/tasks/\" + task.taskId));\n\nconst TodoTasks = (props) => {\n  return (\n    <>\n      <div className=\"main-padding todo-tasks\">\n        <table className=\"table todo-tasks__table\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Name</th>\n              <th>date of addition</th>\n              <th>time of addition</th>\n              <th>Status</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {!props.tasks.length ? (\n              <tr>\n                <td style={{ position: \"absolute\" }}>There are no tasks</td>\n              </tr>\n            ) : (\n              props.tasks.map((task) => (\n                <tr key={task.data.id}>\n                  <td>#</td>\n                  <td\n                    style={{\n                      width: \"200px\",\n                      overflow: \"hidden\",\n                      textOverflow: \"ellipsis\",\n                    }}\n                  >\n                    {task.data.title.length > 10\n                      ? task.data.title.split(\"\").slice(0, 20).join(\"\") + \"...\"\n                      : task.data.title}\n                  </td>\n                  <td>{task.data.date}</td>\n                  <td>{task.data.time}</td>\n                  <td>{task.data.status}</td>\n                  <td className=\"todo-task__link\">\n                    <NavLink to={'/task/' + task.taskId}>Show more</NavLink>\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n          {/* //   <div className=\"todo-task\" key={task.data.id}>\n                //     <span className=\"todo-task__number\">----------</span>\n                // <h4 className=\"todo-task__title\">\n                //   {\" \"}\n                //   <NavLink to={\"/task/\" + task.taskId}>\n                //     {task.data.title}\n                //   </NavLink>{\" \"}\n                // </h4>\n                // <span\n                //   onClick={() => {}}\n                //   className=\"todo-task__delete\"\n                // >\n                //   Delete\n                // </span>\n\n                //   </div> */}\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default TodoTasks;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getTasksData } from \"../../redux/tasksReducer\";\nimport TodoTasks from \"./TodoTasks\";\n\nconst TodoTasksContainer = (props) => {\n  useEffect(() => {\n    props.getTasksData(props.uid);\n  });\n  return <TodoTasks {...props} />;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    uid: state.auth.uid,\n  };\n};\n\nexport default connect(mapStateToProps, { getTasksData })(TodoTasksContainer);\n","import { useState , useRef, useEffect} from \"react\";\nimport \"./TodoHeader.css\"\nimport Logout from '../../assets/logout.png'\nimport { NavLink} from \"react-router-dom\";\n\nconst TodoHeader = (props) => {\n\n  const menu = useRef()\n  const login = useRef()\n  const [isMenu, setIsMenu] = useState(false)\n\n  const handleClick = (e) => {\n    if(e.target !== menu.current && e.target !== login.current) {\n      setIsMenu(false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', handleClick)\n    return () => {\n      window.removeEventListener('click', handleClick)\n    }\n  }, [])\n  \n\n  return (\n    <div className=\"todo-header\">\n      <div className=\"tasks-counter\">\n        <span>Todo App</span>\n      </div>\n      <div className=\"header-login\">\n        {props.email ? (\n          <>\n            <div onClick={() => setIsMenu(!isMenu)} className=\"header-login__name\">\n              <span ref={login}>{props.email}</span>\n            </div>\n            {isMenu && (\n              <div ref={menu} className=\"header-login__menu\">\n                <div\n                  onClick={() => props.onLogout()}\n                  className=\"header-menu__item\"\n                >\n                  <div className=\"header-menu__icon\">\n                    <img src={Logout} alt=\"logout\" />\n                  </div>\n                  <span>Logout</span>\n                </div>\n              </div>\n            )}\n          </>\n        ) : (\n          <NavLink to=\"/login\">\n            <span>Login</span>\n          </NavLink>\n        )}\n      </div>\n    </div>\n  );\n}\n\n\nexport default TodoHeader","import \"./TodoHeader.css\";\nimport { connect } from \"react-redux\";\nimport { logoutThunk } from \"../../redux/authReducer.\";\nimport TodoHeader from \"./TodoHeader\";\n\nconst TodoHeaderContainer = (props) => {\n  const onLogout = () => {\n    props.logoutThunk()\n  }\n\n  return <TodoHeader {...props} onLogout={onLogout} />;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    email: state.auth.email,\n  };\n};\n\nexport default connect(mapStateToProps, { logoutThunk })(TodoHeaderContainer);\n","import \"./TodoMain.css\";\nimport TodoAddContainer from \"../../components/todo-add/TodoAddContainer\";\nimport TodoTasksContainer from \"../../components/todo-tasks/TodoTasksContainer\";\nimport TodoHeaderContainer from \"../todo-header/TodoHeaderContainer\";\n\nconst TodoMain = (props) => {\n  return (\n    <div className=\"todo\">\n      <TodoHeaderContainer tasksLength={props.tasks} />\n\n      <TodoAddContainer />\n\n      <TodoTasksContainer tasks={props.tasks} />\n    </div>\n  );\n};\n\nexport default TodoMain;\n","import React, { useEffect } from \"react\";\nimport TodoMain from \"./TodoMain\";\nimport { connect } from \"react-redux\";\nimport { getAuthDataThunk, initialAppThunk } from \"../../redux/authReducer.\";\nimport { MainPreloader } from \"../common/loader/MainPreloader\";\nimport { compose } from \"redux\";\nimport { Navigate } from \"react-router-dom\";\n\nconst TodoMainContainer = (props) => {\n  useEffect(() => {\n    props.getAuthDataThunk();\n  }, [props.isAuth])\n\n  useEffect(() => {\n    props.initialAppThunk()\n  }, [])\n  \n  if (!props.initialApp) {\n    return <MainPreloader />;\n  }\n\n  if(!props.isAuth) {\n    return <Navigate to='/login'/>\n  }\n\n  return <TodoMain {...props} />;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    tasks: state.todo.tasks,\n    isAuth: state.auth.isAuth,\n\n    initialApp: state.auth.initialApp\n  };\n};\n\n\nexport default compose(\n  connect(mapStateToProps, { getAuthDataThunk, initialAppThunk })\n)(TodoMainContainer);\n"],"names":["emailValidation","regex","RegExp","value","test","undefined","required","minValue","min","length","props","useState","adding","setAdding","className","onClick","src","Plus","alt","Close","onSubmit","formObj","onAddTask","handleSubmit","name","validate","input","meta","type","placeholder","error","touched","dateAndTime","format","date","Date","toLocaleTimeString","toLocaleDateString","connect","state","uid","auth","addTask","result","num","split","str","i","idx","Math","floor","random","idx2","id","time","status","tasks","map","task","style","width","overflow","textOverflow","data","title","slice","join","to","taskId","position","getTasksData","useEffect","menu","useRef","login","isMenu","setIsMenu","handleClick","e","target","current","window","addEventListener","removeEventListener","email","ref","onLogout","Logout","logoutThunk","tasksLength","compose","todo","isAuth","initialApp","getAuthDataThunk","initialAppThunk","MainPreloader"],"sourceRoot":""}