{"version":3,"file":"static/js/761.db0e3e1b.chunk.js","mappings":"qNAyDA,EApDmB,SAACA,GAClB,IAAIC,GAAWC,EAAAA,EAAAA,MACf,OAAIF,EAAMG,YAKR,iBAAKC,UAAU,cAAf,WACE,iBAAKC,QAAS,kBAAMJ,EAAS,MAAMG,UAAU,YAA7C,WACE,gBAAKE,I,yoBAAgBC,IAAI,gBACzB,uCAEF,iBAAKH,UAAU,sCAAf,WACE,gBAAKA,UAAU,QAAf,sBACA,yBAAMJ,EAAMG,WAAWK,YAEzB,iBAAKJ,UAAU,4CAAf,WACE,gBAAKA,UAAU,QAAf,2BACA,uBACGJ,EAAMG,WAAWM,YACdT,EAAMG,WAAWM,YACjB,kCAGR,iBAAKL,UAAU,8CAAf,WACE,gBAAKA,UAAU,QAAf,sBACA,iBAAMA,UAAU,iBAAhB,SAAkCJ,EAAMG,WAAWO,aAGrD,iBAAKN,UAAU,uBAAf,WACE,gBAAKA,UAAU,sBAAf,UACE,mBACEO,SAAsC,cAA5BX,EAAMG,WAAWO,SAA0B,EACrDL,QAAS,kBAAML,EAAMY,gBACrBR,UAAU,qBAHZ,SAK+B,cAA5BJ,EAAMG,WAAWO,OAAyB,YAAc,gBAG7D,gBAAKN,UAAU,sBAAf,UACE,mBACEC,QAAS,kBAAML,EAAMa,gBACrBT,UAAU,oBAFZ,6BArCC,SAACU,EAAA,EAAD,K,+CCiDX,GAAeC,EAAAA,EAAAA,KARS,SAACC,GACvB,MAAO,CACLb,WAAYa,EAAMC,KAAKd,WACvBe,IAAKF,EAAMG,KAAKD,IAChBE,OAAQJ,EAAMG,KAAKC,UAIiB,CACtCC,cAAAA,EAAAA,EACAC,iBAAAA,EAAAA,GACAC,mBAAAA,EAAAA,IAHF,EA/C4B,SAACvB,GAC3B,IAAUwB,GAAWC,EAAAA,EAAAA,MAAfC,GACFzB,GAAWC,EAAAA,EAAAA,OACfyB,EAAAA,EAAAA,YAAU,WACR3B,EAAMsB,qBACL,KAEHK,EAAAA,EAAAA,YAAU,WACR3B,EAAMuB,mBAAmBvB,EAAMkB,IAAKM,KACnC,CAACxB,EAAMoB,OAAQpB,EAAMG,aAqBxB,OACE,SAAC,GAAD,kBACMH,GADN,IAEEa,aAtBiB,YACnBe,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAIC,EAAAA,EAAU,SAAW9B,EAAMkB,IAAM,UAAYM,IACxDvB,EAAS,MAqBPW,aAlBiB,WACnB,IAAMmB,EAAW,CACfrB,OAAQ,YACRD,YAAaT,EAAMG,WAAWM,YAC9BuB,QAAShC,EAAMG,WAAW6B,QAC1BN,GAAI1B,EAAMG,WAAWuB,GACrBO,UAAWjC,EAAMG,WAAW8B,UAC5BzB,MAAOR,EAAMG,WAAWK,OAEpB0B,EAAU,GAEhB,OADAA,EAAQ,SAAWlC,EAAMkB,IAAM,UAAYM,GAAUO,GAC9CI,EAAAA,EAAAA,KAAON,EAAAA,EAAAA,IAAIC,EAAAA,GAAWI","sources":["components/todo-detail/TodoDetail.jsx","components/todo-detail/TodoDetailContainer.jsx"],"sourcesContent":["import './TodoDetail.css'\nimport {MainPreloader} from '../common/loader/MainPreloader'\nimport ArrowLeft from '../../assets/arrow-left.png'\nimport { useNavigate } from 'react-router-dom'\n\nconst TodoDetail = (props) => {\n  let navigate = useNavigate()\n  if(!props.detailTask) {\n    return <MainPreloader/>\n  }\n  \n  return (\n    <div className=\"task-detail\">\n      <div onClick={() => navigate(\"/\")} className=\"goto-main\">\n        <img src={ArrowLeft} alt=\"arrow_left\" />\n        <span>Back</span>\n      </div>\n      <div className=\"task-detail-desc task-detail__title\">\n        <div className=\"title\">Title: </div>\n        <div>{props.detailTask.title}</div>\n      </div>\n      <div className=\"task-detail-desc task-detail__description\">\n        <div className=\"title\">Description:</div>\n        <p>\n          {props.detailTask.description\n            ? props.detailTask.description\n            : \"Description not specified\"}\n        </p>\n      </div>\n      <div className=\"status task-detail-desc task-detail__status\">\n        <div className=\"title\">Status:</div>\n        <span className=\"status__itself\">{props.detailTask.status}</span>\n      </div>\n\n      <div className=\"task-detail__buttons\">\n        <div className=\"task-detail__button\">\n          <button\n            disabled={props.detailTask.status === \"Completed\" && true}\n            onClick={() => props.completeTask()}\n            className=\"button button-blue\"\n          >\n            {props.detailTask.status === \"Completed\" ? \"Completed\" : 'Complete'}\n          </button>\n        </div>\n        <div className=\"task-detail__button\">\n          <button\n            onClick={() => props.onRemoveTask()}\n            className=\"button button-red\"\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TodoDetail","import React, { useEffect } from \"react\";\nimport TodoDetail from \"./TodoDetail\";\nimport { database } from \"../../firebaseConfig\";\nimport {remove, ref, update} from 'firebase/database'\nimport { connect } from \"react-redux\";\nimport { getDetailTask } from \"../../redux/tasksReducer\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { getAuthDataThunk } from \"../../redux/authReducer.\";\nimport { getDetailTaskThunk } from \"../../redux/tasksReducer\";\n\nconst TodoDetailContainer = (props) => {\n  let { id: taskId } = useParams();\n  let navigate = useNavigate()\n  useEffect(() => {\n    props.getAuthDataThunk();\n  }, []);\n\n  useEffect(() => {\n    props.getDetailTaskThunk(props.uid, taskId);\n  }, [props.isAuth, props.detailTask]);\n\n  const onRemoveTask = () => {\n    remove(ref(database, 'users/' + props.uid + \"/tasks/\" + taskId));\n    navigate('/')\n  }\n\n  const completeTask = () => {\n    const taskData = {\n      status: \"Completed\",\n      description: props.detailTask.description,\n      endDate: props.detailTask.endDate,\n      id: props.detailTask.id,\n      startDate: props.detailTask.startDate,\n      title: props.detailTask.title,\n    };\n    const updates = {}\n    updates['users/' + props.uid + '/tasks/' + taskId] = taskData\n    return update(ref(database), updates)\n  }\n\n  return (\n    <TodoDetail\n      {...props}\n      onRemoveTask={onRemoveTask}\n      completeTask={completeTask}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    detailTask: state.todo.detailTask,\n    uid: state.auth.uid,\n    isAuth: state.auth.isAuth,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getDetailTask,\n  getAuthDataThunk,\n  getDetailTaskThunk,\n})(TodoDetailContainer);\n"],"names":["props","navigate","useNavigate","detailTask","className","onClick","src","alt","title","description","status","disabled","completeTask","onRemoveTask","MainPreloader","connect","state","todo","uid","auth","isAuth","getDetailTask","getAuthDataThunk","getDetailTaskThunk","taskId","useParams","id","useEffect","remove","ref","database","taskData","endDate","startDate","updates","update"],"sourceRoot":""}